# ===========================================================================
# Notes
# ===========================================================================
"""
(*) This script performs k-means on the data to understand some of the
    structure in the data
"""
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Import packages
# ===========================================================================
import os
import numpy as np
import pandas as pd
from AndPotap.Utils.KNN import KNN
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Determine files
# ===========================================================================
# Set working directory
os.chdir('/Users/andpotap/Documents/Columbia/BS/BDA_project')

# Select files for input and output
# Input
# file_input = './AndPotap/DBs/core_sample.txt'
file_input = './AndPotap/DBs/core.txt'
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Load files
# ===========================================================================
df = pd.read_csv(filepath_or_buffer=file_input, sep='|')
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Select relevant columns
# ===========================================================================
selected_columns = [
    'asset_market_value',
    'client_income',
    'appraisal_value',
    # 'sex_F',
    # 'condition_U',
    'age',
    'mar_2_inc',
    # 'app_2_inc',
    # 'mar_2_app',
    # 'factor_employed',
    'effective_pay',
    # 'ratio'
]
y = df['y'].values
df = df[selected_columns]
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Standardize the variables
# ===========================================================================
for i in range(3):
    df.loc[:, selected_columns[i]] = \
        df[selected_columns[i]].apply(func=np.log)

for j in range(len(selected_columns)):
    df.loc[:, selected_columns[j]] = \
        ((df.loc[:, selected_columns[j]] -
         df.loc[:, selected_columns[j]].mean()) /
         df.loc[:, selected_columns[j]].std())

x = df.values
# ===========================================================================
# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# ===========================================================================
# Run KNN
# ===========================================================================
self = KNN(x=x, y=y, k_neighb=200)
self.sampling()
self.calculate_accuracy()
print(self.fold_accuracy)
# ===========================================================================
