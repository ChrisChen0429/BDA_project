condition_U,
y)
geo <- data_sub %>% group_by(city) %>%
summarize(market_mean = mean(asset_market_value),
appraisal_mean = mean(appraisal_value),
income_mean = mean(client_income),
mar_2_inc_mean = mean(mar_2_inc),
app_2_inc_mean = mean(app_2_inc),
mar_2_app_mean = mean(mar_2_app),
age_mean = mean(age),
number = n(),
y_sum = sum(y)) %>% ungroup()
state = c()
for (i in geo$city){state = c(state, unique(data$state[which(data$city==i)])[1])}
geo <- cbind(geo,state)
## Rescaling
inputs <- geo %>%
mutate(
income_st = (income_mean - mean(income_mean)) / sd(income_mean),
appraisal_st = (appraisal_mean - mean(appraisal_mean)) / sd(appraisal_mean),
market_st = (market_mean - mean(market_mean)) / sd(market_mean),
mar_2_inc_st = (mar_2_inc_mean - mean(mar_2_inc_mean)) / sd(mar_2_inc_mean),
app_2_inc_st = (app_2_inc_mean - mean(app_2_inc_mean)) / sd(app_2_inc_mean),
mar_2_app_st = (mar_2_app_mean - mean(mar_2_app_mean)) / sd(mar_2_app_mean),
age_st = (age_mean - mean(age_mean)) / sd(age_mean)
) %>%
dplyr::select(
income_st,
mar_2_inc_st,
appraisal_st,
app_2_inc_st,
mar_2_app_st,
market_st,
age_st,
state,
number,
y_sum
)
N = length(unique(inputs$state))
A <- matrix(0,ncol = N,nrow = N)
colnames(A) = unique(inputs$state)
rownames(A) = unique(inputs$state)
A['NUEVO LEON',c('ZACATECAS','SAN LUIS POTOSI','TAMAULIPAS','COAHUILA DE ZARAGOZA')] = 1
A[c('ZACATECAS','SAN LUIS POTOSI','TAMAULIPAS','COAHUILA DE ZARAGOZA'),'NUEVO LEON'] = 1
A['VERACRUZ LLAVE',c('TAMAULIPAS','SAN LUIS POTOSI','HIDALGO','PUEBLA','OAXACA','CHIAPAS','TABASCO')] = 1
A[c('TAMAULIPAS','SAN LUIS POTOSI','HIDALGO','PUEBLA','OAXACA','CHIAPAS','TABASCO'),'VERACRUZ LLAVE'] = 1
A['GUANAJUATO',c('MICHOACAN DE OCAMPO','JALISCO','SAN LUIS POTOSI','ZACATECAS','QUERETARO DE ARTEAGA')] = 1
A[c('MICHOACAN DE OCAMPO','JALISCO','SAN LUIS POTOSI','ZACATECAS','QUERETARO DE ARTEAGA'),'GUANAJUATO'] = 1
A['NAYARIT',c('SINALOA','DURANGO','ZACATECAS','JALISCO')] = 1
A[c('SINALOA','DURANGO','ZACATECAS','JALISCO'),'NAYARIT'] = 1
A['JALISCO',c('NAYARIT','ZACATECAS','COLIMA','MICHOACAN DE OCAMPO','GUANAJUATO','AGUASCALIENTES')] = 1
A[c('NAYARIT','ZACATECAS','COLIMA','MICHOACAN DE OCAMPO','GUANAJUATO','AGUASCALIENTES'),'JALISCO'] = 1
A['DISTRITO FEDERAL',c('ESTADO DE MEXICO','MORELOS')] = 1
A[c('ESTADO DE MEXICO','MORELOS'),'DISTRITO FEDERAL'] = 1
A['MORELOS',c('GUERRERO','PUEBLA','ESTADO DE MEXICO')] = 1
A[c('GUERRERO','PUEBLA','ESTADO DE MEXICO'),'MORELOS'] = 1
A['MICHOACAN DE OCAMPO',c('COAHUILA DE ZARAGOZA','ESTADO DE MEXICO','JALISCO','GUANAJUATO','GUERRERO','QUERETARO DE ARTEAGA')] = 1
A[c('COAHUILA DE ZARAGOZA','JALISCO','ESTADO DE MEXICO','GUANAJUATO','GUERRERO','QUERETARO DE ARTEAGA'),'MICHOACAN DE OCAMPO'] = 1
A['ESTADO DE MEXICO',c('HIDALGO','QUERETARO DE ARTEAGA','MICHOACAN DE OCAMPO','GUERRERO','PUEBLA','TLAXCALA','MORELOS')] = 1
A[c('HIDALGO','QUERETARO DE ARTEAGA','MICHOACAN DE OCAMPO','GUERRERO','PUEBLA','TLAXCALA','MORELOS'), 'ESTADO DE MEXICO'] = 1
A['HIDALGO',c('ESTADO DE MEXICO','QUERETARO DE ARTEAGA','SAN LUIS POTOSI','VERACRUZ LLAVE','PUEBLA','TLAXCALA')] = 1
A[c('ESTADO DE MEXICO','QUERETARO DE ARTEAGA','SAN LUIS POTOSI','VERACRUZ LLAVE','PUEBLA','TLAXCALA'),'HIDALGO'] = 1
A['ZACATECAS',c('JALISCO','NAYARIT','DURANGO','COAHUILA DE ZARAGOZA','NUEVO LEON','TAMAULIPAS','SAN LUIS POTOSI','AGUASCALIENTES')] = 1
A[c('JALISCO','NAYARIT','DURANGO','COAHUILA DE ZARAGOZA','NUEVO LEON','TAMAULIPAS','SAN LUIS POTOSI','AGUASCALIENTES'),'ZACATECAS'] = 1
A['GUERRERO',c('MICHOACAN DE OCAMPO','PUEBLA','ESTADO DE MEXICO','MORELOS')] = 1
A[c('MICHOACAN DE OCAMPO','PUEBLA','ESTADO DE MEXICO','MORELOS'),'GUERRERO'] = 1
A['DURANGO',c('CHIHUAHUA','COAHUILA DE ZARAGOZA','ZACATECAS','NAYARIT','SINALOA')] = 1
A[c('CHIHUAHUA','COAHUILA DE ZARAGOZA','ZACATECAS','NAYARIT','SINALOA'),'DURANGO'] = 1
A['CHIHUAHUA',c('DURANGO','SINALOA','COAHUILA DE ZARAGOZA','SONORA')] = 1
A[c('DURANGO','SINALOA','COAHUILA DE ZARAGOZA','SONORA'),'CHIHUAHUA'] = 1
A['CHIAPAS',c('OAXACA','VERACRUZ LLAVE','TABASCO','CAMPECHE')] = 1
A[c('OAXACA','VERACRUZ LLAVE','TABASCO','CAMPECHE'),'CHIAPAS'] = 1
A['COLIMA',c('JALISCO','MICHOACAN DE OCAMPO')] = 1
A[c('JALISCO','MICHOACAN DE OCAMPO'),'COLIMA'] = 1ã€€
A['COAHUILA DE ZARAGOZA',c('NUEVO LEON','ZACATECAS','DURANGO','CHIHUAHUA','SAN LUIS POTOSI')] = 1
A[c('NUEVO LEON','ZACATECAS','DURANGO','CHIHUAHUA','SAN LUIS POTOSI'),'COAHUILA DE ZARAGOZA'] = 1
A['SAN LUIS POTOSI',c('TABASCO','NUEVO LEON','COAHUILA DE ZARAGOZA','ZACATECAS','JALISCO','GUANAJUATO','QUERETARO DE ARTEAGA','HIDALGO','VERACRUZ LLAVE')] = 1
A[c('TABASCO','NUEVO LEON','COAHUILA DE ZARAGOZA','ZACATECAS','JALISCO','GUANAJUATO','QUERETARO DE ARTEAGA','HIDALGO','VERACRUZ LLAVE'),'SAN LUIS POTOSI'] = 1
A['CAMPECHE',c('TABASCO','QUINTANA ROO','YUCATAN')] = 1
A[c('TABASCO','QUINTANA ROO','YUCATAN'),'CAMPECHE'] = 1
A['BAJA CALIFORNIA SUR',c('BAJA CALIFORNIA','SONORA','SINALOA')] = 1
A[c('BAJA CALIFORNIA','SONORA','SINALOA'),'BAJA CALIFORNIA SUR'] = 1
A['BAJA CALIFORNIA',c('BAJA CALIFORNIA SUR','SONORA')] = 1
A[c('BAJA CALIFORNIA SUR','SONORA'),'BAJA CALIFORNIA'] = 1
A['AGUASCALIENTES',c('ZACATECAS','JALISCO')] = 1
A[c('ZACATECAS','JALISCO'),'AGUASCALIENTES'] = 1
A['YUCATAN',c('CAMPECHE','QUINTANA ROO')] = 1
A[c('CAMPECHE','QUINTANA ROO'),'YUCATAN'] = 1
A['TAMAULIPAS',c('NUEVO LEON','SAN LUIS POTOSI','VERACRUZ LLAVE')] = 1
A[c('NUEVO LEON','SAN LUIS POTOSI','VERACRUZ LLAVE'),'TAMAULIPAS'] = 1
A['TABASCO',c('CAMPECHE','CHIAPAS','VERACRUZ LLAVE')] = 1
A[c('CAMPECHE','CHIAPAS','VERACRUZ LLAVE'),'TABASCO'] = 1
A['SONORA',c('BAJA CALIFORNIA','BAJA CALIFORNIA SUR','SINALOA','CHIHUAHUA')] = 1
A[c('BAJA CALIFORNIA','BAJA CALIFORNIA SUR','SINALOA','CHIHUAHUA'),'SONORA'] = 1
A['SINALOA',c('SONORA','CHIHUAHUA','DURANGO','NAYARIT')] = 1
A[c('SONORA','CHIHUAHUA','DURANGO','NAYARIT'),'SINALOA'] = 1
A['QUINTANA ROO',c('YUCATAN','CAMPECHE')] = 1
A[c('YUCATAN','CAMPECHE'),'QUINTANA ROO'] =1
A['QUERETARO DE ARTEAGA',c('SAN LUIS POTOSI','HIDALGO','ESTADO DE MEXICO','GUANAJUATO','MICHOACAN DE OCAMPO')] = 1
A[c('SAN LUIS POTOSI','HIDALGO','ESTADO DE MEXICO','GUANAJUATO','MICHOACAN DE OCAMPO'),'QUERETARO DE ARTEAGA'] = 1
A['PUEBLA',c('ESTADO DE MEXICO','MORELOS','TLAXCALA','GUERRERO','OAXACA','VERACRUZ LLAVE','HIDALGO')] = 1
A[c('ESTADO DE MEXICO','MORELOS','TLAXCALA','GUERRERO','OAXACA','VERACRUZ LLAVE','HIDALGO'),'PUEBLA'] = 1
A['TLAXCALA',c('ESTADO DE MEXICO','HIDALGO','PUEBLA')] = 1
A[c('ESTADO DE MEXICO','HIDALGO','PUEBLA'),'TLAXCALA'] = 1
A['OAXACA',c('GUERRERO','PUEBLA','VERACRUZ LLAVE','CHIAPAS')] = 1
A[c('GUERRERO','PUEBLA','VERACRUZ LLAVE','CHIAPAS'),'OAXACA'] =1
## Inputs for STAN
y = inputs$y_sum
X = inputs %>% dplyr::select(-y_sum, -state)
X = cbind(1,X)
colnames(X) <- c('intercept','income_st','mar_2_inc_st','appraisal_st','app_2_inc_st','mar_2_app_st','market_st','age_st')
n = nrow(X)
p = ncol(X)
state = as.vector(inputs$state)
unique_s = unique(state)
for (i in 1:32){
s = as.character(unique_s[i])
state[state==s] = as.numeric(i)
}
state = as.numeric(state)
## baseline model
baseline_data = list(N=n,p=p, X=X,y=y)
baseline_model = model <- stan_model('./yi_stan/yi_baseline_city.stan')
fit <- sampling(baseline_model, data = baseline_data)
print(fit,pars=c('beta','lp__'))
ss_mod = as.shinystan(fit)
launch_shinystan(ss_mod)
## CAR model
CAR_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
CAR_model = model <- stan_model('./yi_stan/yi_CAR_city.stan')
## CAR model
CAR_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
CAR_model = model <- stan_model('./yi_stan/yi_CAR_city.stan')
fit_car <- sampling(CAR_model, data = CAR_data,chain=1,)
print(fit_car,pars=c('phi','lp__'))
ss_mod_car = as.shinystan(fit_car)
fit_car <- sampling(CAR_model, data = CAR_data)
fit_car <- sampling(CAR_model, data = CAR_data)
fit_car <- sampling(CAR_model, data = CAR_data)
CAR_model = model <- stan_model('./yi_stan/yi_CAR_city.stan')
fit_car <- sampling(CAR_model, data = CAR_data)
print(fit_car,pars=c('phi','lp__'))
## CAR model
zero_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
zero_model = model <- stan_model('./yi_stan/zero-inflated-possion-binormal-mix.stan')
fit_zero <- sampling(zero_model, data = zero_data)
print(fit_car,pars=c('phi','lp__'))
ss_mod_car = as.shinystan(fit_car)
knitr::opts_chunk$set(echo = TRUE)
library(bayesplot)
library(shinystan)
ss_mod = as.shinystan(fit)
launch_shinystan(ss_mod)
select_vec <- which(data$state %in% unique(data$state)[5:10])
ppc_stat_grouped(y = data$y[select_vec],
yrep = y_rep[,select_vec], group = data$state[select_vec], stat = 'sd')
## baseline model
baseline_data = list(N=n,p=p, X=X,y=y)
baseline_model = model <- stan_model('./yi_stan/yi_baseline_city.stan')
fit <- sampling(baseline_model, data = baseline_data,show_messages = FALSE)
print(fit,pars=c('beta','lp__'))
ss_mod = as.shinystan(fit)
## baseline model
baseline_data = list(N=n,p=p, X=X,y=y)
baseline_model = model <- stan_model('./yi_stan/yi_baseline_city.stan')
fit <- sampling(baseline_model, data = baseline_data,show_messages = FALSE,seed=1234)
print(fit,pars=c('beta','lp__'))
## CAR model
CAR_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
CAR_model = model <- stan_model('./yi_stan/yi_CAR_city.stan')
## CAR model
zero_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
zero_model = model <- stan_model('./yi_stan/zero-inflated-possion-binormal-mix.stan')
## CAR model
zero_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
zero_model = model <- stan_model('./yi_stan/zero-inflated-possion-binormal-mix.stan')
fit_zero <- sampling(zero_model, data = zero_data,show_messages = FALSE,seed=1234)
print(fit_zero,pars=c('phi','lp__'))
fit_zero <- sampling(zero_model, data = zero_data,show_messages = FALSE,seed=1234,chian=1)
fit_zero <- sampling(zero_model, data = zero_data,show_messages = FALSE,seed=1234,chains=1)
X
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
library(tidyverse)
library(arm)
library(ggplot2)
library(gridExtra)
library(bayesplot)
library(shinystan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
knitr::opts_chunk$set(echo = TRUE)
file <-  '../data/core.txt'
data <- read_delim(file = file, delim = '|')
# Sample the data
pct = 1
# pct = 0.1
# pct = 0.01
set.seed(seed = 42)
sample_size = round(pct * nrow(data))
sample <- sample(x = nrow(data), size = sample_size, replace = F)
data = data[sample, ]
## Selecting the relevant columns for the analysis
data_sub <- data %>% dplyr::select(
state,
city,
county,
zip,
asset_market_value,
mar_2_app,
appraisal_value,
app_2_inc,
client_income,
mar_2_inc,
age,
sex_F,
condition_U,
y)
geo <- data_sub %>% group_by(city) %>%
summarize(market_mean = mean(asset_market_value),
appraisal_mean = mean(appraisal_value),
income_mean = mean(client_income),
mar_2_inc_mean = mean(mar_2_inc),
app_2_inc_mean = mean(app_2_inc),
mar_2_app_mean = mean(mar_2_app),
age_mean = mean(age),
number = n(),
y_sum = sum(y)) %>% ungroup()
state = c()
for (i in geo$city){state = c(state, unique(data$state[which(data$city==i)])[1])}
geo <- cbind(geo,state)
## Rescaling
inputs <- geo %>%
mutate(
income_st = (income_mean - mean(income_mean)) / sd(income_mean),
appraisal_st = (appraisal_mean - mean(appraisal_mean)) / sd(appraisal_mean),
market_st = (market_mean - mean(market_mean)) / sd(market_mean),
mar_2_inc_st = (mar_2_inc_mean - mean(mar_2_inc_mean)) / sd(mar_2_inc_mean),
app_2_inc_st = (app_2_inc_mean - mean(app_2_inc_mean)) / sd(app_2_inc_mean),
mar_2_app_st = (mar_2_app_mean - mean(mar_2_app_mean)) / sd(mar_2_app_mean),
age_st = (age_mean - mean(age_mean)) / sd(age_mean)
) %>%
dplyr::select(
income_st,
mar_2_inc_st,
appraisal_st,
app_2_inc_st,
mar_2_app_st,
market_st,
age_st,
state,
number,
y_sum
)
N = length(unique(inputs$state))
A <- matrix(0,ncol = N,nrow = N)
colnames(A) = unique(inputs$state)
rownames(A) = unique(inputs$state)
A['NUEVO LEON',c('ZACATECAS','SAN LUIS POTOSI','TAMAULIPAS','COAHUILA DE ZARAGOZA')] = 1
A[c('ZACATECAS','SAN LUIS POTOSI','TAMAULIPAS','COAHUILA DE ZARAGOZA'),'NUEVO LEON'] = 1
A['VERACRUZ LLAVE',c('TAMAULIPAS','SAN LUIS POTOSI','HIDALGO','PUEBLA','OAXACA','CHIAPAS','TABASCO')] = 1
A[c('TAMAULIPAS','SAN LUIS POTOSI','HIDALGO','PUEBLA','OAXACA','CHIAPAS','TABASCO'),'VERACRUZ LLAVE'] = 1
A['GUANAJUATO',c('MICHOACAN DE OCAMPO','JALISCO','SAN LUIS POTOSI','ZACATECAS','QUERETARO DE ARTEAGA')] = 1
A[c('MICHOACAN DE OCAMPO','JALISCO','SAN LUIS POTOSI','ZACATECAS','QUERETARO DE ARTEAGA'),'GUANAJUATO'] = 1
A['NAYARIT',c('SINALOA','DURANGO','ZACATECAS','JALISCO')] = 1
A[c('SINALOA','DURANGO','ZACATECAS','JALISCO'),'NAYARIT'] = 1
A['JALISCO',c('NAYARIT','ZACATECAS','COLIMA','MICHOACAN DE OCAMPO','GUANAJUATO','AGUASCALIENTES')] = 1
A[c('NAYARIT','ZACATECAS','COLIMA','MICHOACAN DE OCAMPO','GUANAJUATO','AGUASCALIENTES'),'JALISCO'] = 1
A['DISTRITO FEDERAL',c('ESTADO DE MEXICO','MORELOS')] = 1
A[c('ESTADO DE MEXICO','MORELOS'),'DISTRITO FEDERAL'] = 1
A['MORELOS',c('GUERRERO','PUEBLA','ESTADO DE MEXICO')] = 1
A[c('GUERRERO','PUEBLA','ESTADO DE MEXICO'),'MORELOS'] = 1
A['MICHOACAN DE OCAMPO',c('COAHUILA DE ZARAGOZA','ESTADO DE MEXICO','JALISCO','GUANAJUATO','GUERRERO','QUERETARO DE ARTEAGA')] = 1
A[c('COAHUILA DE ZARAGOZA','JALISCO','ESTADO DE MEXICO','GUANAJUATO','GUERRERO','QUERETARO DE ARTEAGA'),'MICHOACAN DE OCAMPO'] = 1
A['ESTADO DE MEXICO',c('HIDALGO','QUERETARO DE ARTEAGA','MICHOACAN DE OCAMPO','GUERRERO','PUEBLA','TLAXCALA','MORELOS')] = 1
A[c('HIDALGO','QUERETARO DE ARTEAGA','MICHOACAN DE OCAMPO','GUERRERO','PUEBLA','TLAXCALA','MORELOS'), 'ESTADO DE MEXICO'] = 1
A['HIDALGO',c('ESTADO DE MEXICO','QUERETARO DE ARTEAGA','SAN LUIS POTOSI','VERACRUZ LLAVE','PUEBLA','TLAXCALA')] = 1
A[c('ESTADO DE MEXICO','QUERETARO DE ARTEAGA','SAN LUIS POTOSI','VERACRUZ LLAVE','PUEBLA','TLAXCALA'),'HIDALGO'] = 1
A['ZACATECAS',c('JALISCO','NAYARIT','DURANGO','COAHUILA DE ZARAGOZA','NUEVO LEON','TAMAULIPAS','SAN LUIS POTOSI','AGUASCALIENTES')] = 1
A[c('JALISCO','NAYARIT','DURANGO','COAHUILA DE ZARAGOZA','NUEVO LEON','TAMAULIPAS','SAN LUIS POTOSI','AGUASCALIENTES'),'ZACATECAS'] = 1
A['GUERRERO',c('MICHOACAN DE OCAMPO','PUEBLA','ESTADO DE MEXICO','MORELOS')] = 1
A[c('MICHOACAN DE OCAMPO','PUEBLA','ESTADO DE MEXICO','MORELOS'),'GUERRERO'] = 1
A['DURANGO',c('CHIHUAHUA','COAHUILA DE ZARAGOZA','ZACATECAS','NAYARIT','SINALOA')] = 1
A[c('CHIHUAHUA','COAHUILA DE ZARAGOZA','ZACATECAS','NAYARIT','SINALOA'),'DURANGO'] = 1
A['CHIHUAHUA',c('DURANGO','SINALOA','COAHUILA DE ZARAGOZA','SONORA')] = 1
A[c('DURANGO','SINALOA','COAHUILA DE ZARAGOZA','SONORA'),'CHIHUAHUA'] = 1
A['CHIAPAS',c('OAXACA','VERACRUZ LLAVE','TABASCO','CAMPECHE')] = 1
A[c('OAXACA','VERACRUZ LLAVE','TABASCO','CAMPECHE'),'CHIAPAS'] = 1
A['COLIMA',c('JALISCO','MICHOACAN DE OCAMPO')] = 1
A[c('JALISCO','MICHOACAN DE OCAMPO'),'COLIMA'] = 1ã€€
A['COAHUILA DE ZARAGOZA',c('NUEVO LEON','ZACATECAS','DURANGO','CHIHUAHUA','SAN LUIS POTOSI')] = 1
A[c('NUEVO LEON','ZACATECAS','DURANGO','CHIHUAHUA','SAN LUIS POTOSI'),'COAHUILA DE ZARAGOZA'] = 1
A['SAN LUIS POTOSI',c('TABASCO','NUEVO LEON','COAHUILA DE ZARAGOZA','ZACATECAS','JALISCO','GUANAJUATO','QUERETARO DE ARTEAGA','HIDALGO','VERACRUZ LLAVE')] = 1
A[c('TABASCO','NUEVO LEON','COAHUILA DE ZARAGOZA','ZACATECAS','JALISCO','GUANAJUATO','QUERETARO DE ARTEAGA','HIDALGO','VERACRUZ LLAVE'),'SAN LUIS POTOSI'] = 1
A['CAMPECHE',c('TABASCO','QUINTANA ROO','YUCATAN')] = 1
A[c('TABASCO','QUINTANA ROO','YUCATAN'),'CAMPECHE'] = 1
A['BAJA CALIFORNIA SUR',c('BAJA CALIFORNIA','SONORA','SINALOA')] = 1
A[c('BAJA CALIFORNIA','SONORA','SINALOA'),'BAJA CALIFORNIA SUR'] = 1
A['BAJA CALIFORNIA',c('BAJA CALIFORNIA SUR','SONORA')] = 1
A[c('BAJA CALIFORNIA SUR','SONORA'),'BAJA CALIFORNIA'] = 1
A['AGUASCALIENTES',c('ZACATECAS','JALISCO')] = 1
A[c('ZACATECAS','JALISCO'),'AGUASCALIENTES'] = 1
A['YUCATAN',c('CAMPECHE','QUINTANA ROO')] = 1
A[c('CAMPECHE','QUINTANA ROO'),'YUCATAN'] = 1
A['TAMAULIPAS',c('NUEVO LEON','SAN LUIS POTOSI','VERACRUZ LLAVE')] = 1
A[c('NUEVO LEON','SAN LUIS POTOSI','VERACRUZ LLAVE'),'TAMAULIPAS'] = 1
A['TABASCO',c('CAMPECHE','CHIAPAS','VERACRUZ LLAVE')] = 1
A[c('CAMPECHE','CHIAPAS','VERACRUZ LLAVE'),'TABASCO'] = 1
A['SONORA',c('BAJA CALIFORNIA','BAJA CALIFORNIA SUR','SINALOA','CHIHUAHUA')] = 1
A[c('BAJA CALIFORNIA','BAJA CALIFORNIA SUR','SINALOA','CHIHUAHUA'),'SONORA'] = 1
A['SINALOA',c('SONORA','CHIHUAHUA','DURANGO','NAYARIT')] = 1
A[c('SONORA','CHIHUAHUA','DURANGO','NAYARIT'),'SINALOA'] = 1
A['QUINTANA ROO',c('YUCATAN','CAMPECHE')] = 1
A[c('YUCATAN','CAMPECHE'),'QUINTANA ROO'] =1
A['QUERETARO DE ARTEAGA',c('SAN LUIS POTOSI','HIDALGO','ESTADO DE MEXICO','GUANAJUATO','MICHOACAN DE OCAMPO')] = 1
A[c('SAN LUIS POTOSI','HIDALGO','ESTADO DE MEXICO','GUANAJUATO','MICHOACAN DE OCAMPO'),'QUERETARO DE ARTEAGA'] = 1
A['PUEBLA',c('ESTADO DE MEXICO','MORELOS','TLAXCALA','GUERRERO','OAXACA','VERACRUZ LLAVE','HIDALGO')] = 1
A[c('ESTADO DE MEXICO','MORELOS','TLAXCALA','GUERRERO','OAXACA','VERACRUZ LLAVE','HIDALGO'),'PUEBLA'] = 1
A['TLAXCALA',c('ESTADO DE MEXICO','HIDALGO','PUEBLA')] = 1
A[c('ESTADO DE MEXICO','HIDALGO','PUEBLA'),'TLAXCALA'] = 1
A['OAXACA',c('GUERRERO','PUEBLA','VERACRUZ LLAVE','CHIAPAS')] = 1
A[c('GUERRERO','PUEBLA','VERACRUZ LLAVE','CHIAPAS'),'OAXACA'] =1
View(inputs)
X = inputs %>% dplyr::select(-y_sum, -state,-number)
X
colnames(X) <- c('intercept','income_st','mar_2_inc_st','appraisal_st','app_2_inc_st','mar_2_app_st','market_st','age_st')
X
file <-  '../data/core.txt'
data <- read_delim(file = file, delim = '|')
data <- read_delim(file = file, delim = '|')
# Sample the data
pct = 1
# Sample the data
pct = 1
# pct = 0.1
# pct = 0.01
set.seed(seed = 42)
sample_size = round(pct * nrow(data))
sample <- sample(x = nrow(data), size = sample_size, replace = F)
data = data[sample, ]
## Selecting the relevant columns for the analysis
data_sub <- data %>% dplyr::select(
state,
city,
county,
zip,
asset_market_value,
mar_2_app,
appraisal_value,
app_2_inc,
client_income,
mar_2_inc,
age,
sex_F,
condition_U,
y)
geo <- data_sub %>% group_by(city) %>%
summarize(market_mean = mean(asset_market_value),
appraisal_mean = mean(appraisal_value),
income_mean = mean(client_income),
mar_2_inc_mean = mean(mar_2_inc),
app_2_inc_mean = mean(app_2_inc),
mar_2_app_mean = mean(mar_2_app),
age_mean = mean(age),
number = n(),
y_sum = sum(y)) %>% ungroup()
state = c()
for (i in geo$city){state = c(state, unique(data$state[which(data$city==i)])[1])}
geo <- cbind(geo,state)
## Rescaling
inputs <- geo %>%
mutate(
income_st = (income_mean - mean(income_mean)) / sd(income_mean),
appraisal_st = (appraisal_mean - mean(appraisal_mean)) / sd(appraisal_mean),
market_st = (market_mean - mean(market_mean)) / sd(market_mean),
mar_2_inc_st = (mar_2_inc_mean - mean(mar_2_inc_mean)) / sd(mar_2_inc_mean),
app_2_inc_st = (app_2_inc_mean - mean(app_2_inc_mean)) / sd(app_2_inc_mean),
mar_2_app_st = (mar_2_app_mean - mean(mar_2_app_mean)) / sd(mar_2_app_mean),
age_st = (age_mean - mean(age_mean)) / sd(age_mean)
) %>%
dplyr::select(
income_st,
mar_2_inc_st,
appraisal_st,
app_2_inc_st,
mar_2_app_st,
market_st,
age_st,
state,
number,
y_sum
)
inputs
number = inputs$number
## Inputs for STAN
y = inputs$y_sum
number = inputs$number
X = inputs %>% dplyr::select(-y_sum, -state,-number)
X
X = cbind(1,X)
colnames(X) <- c('intercept','income_st','mar_2_inc_st','appraisal_st','app_2_inc_st','mar_2_app_st','market_st','age_st')
n = nrow(X)
p = ncol(X)
state = as.vector(inputs$state)
unique_s = unique(state)
for (i in 1:32){
s = as.character(unique_s[i])
state[state==s] = as.numeric(i)
}
state = as.numeric(state)
## CAR model
CAR_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
CAR_model = model <- stan_model('./yi_stan/yi_CAR_city.stan')
fit_car <- sampling(CAR_model, data = CAR_data,show_messages = FALSE,seed=1234)
print(fit_car,pars=c('phi','lp__'))
## Hier model
Hier_data <- list(n = n,         # number of observations
s = 32,
p = p,         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
state = state)               # adjacency matrix
Hier_model = model <- stan_model('./yi_stan/yi_hier_city.stan')
fit <- sampling(Hier_model, data = Hier_data,show_messages = FALSE,seed=1234)
## Hier model
Hier_data <- list(n = n,         # number of observations
s = 32,
p = p,         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
number = inputs$number,
state = state)               # adjacency matrix
Hier_model = model <- stan_model('./yi_stan/yi_hier_city.stan')
Hier_model = model <- stan_model('./yi_stan/yi_hier_city.stan')
fit <- sampling(Hier_model, data = Hier_data,show_messages = FALSE,seed=1234)
print(fit,pars=c('alpha','alpha_s','lp__'))
## CAR model
zero_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
zero_model = model <- stan_model('./yi_stan/zero-inflated-possion-binormal-mix.stan')
## CAR model
zero_data <- list(k = nrow(X),         # number of observations
n = nrow(A),
p = ncol(X),         # number of coefficients
X = X,               # design matrix
y = y,               # observed number of cases
W = A,
number = inputs$number,
W_n = sum(A) / 2,    # number of neighbor pairs
state = state)               # adjacency matrix
zero_model = model <- stan_model('./yi_stan/zero-inflated-possion-binormal-mix.stan')
fit_zero <- sampling(zero_model, data = zero_data,show_messages = FALSE,seed=1234,chains=1)
